<!DOCTYPE html>
<html>
<head>
    <style>
        html, body {
            height:100%;
            margin:0;
        }
        .top{
            height:100vh;
            background:#e6ffff;
        }
        .bottom{
            height:100vh;
            background:#06f;
        }
        .color-changer{height:200vh;position:relative;background:#e6ffff;}
        h1 {
            position:sticky;
            top:20px;
            opacity:0;
            font-size:1rem;
            color:white;
            text-align:center;
            transition:0.3s ease-out;
            margin:0;
            padding:10px;
        }
    </style>
</head>
<body>
    <div class="top"></div>
    
    <div class="color-changer">
        <h1>刘圭宥</h1>
    </div>

    <div class="bottom"></div>

    <script>
        const div = document.querySelector('.color-changer');
        const h1 = document.querySelector('h1');
        // 定义颜色变化范围
        const startColor={r:230,g:255,b:255};//#e6ffff
        const endColor={r:0,g:102,b:255};//#0066ff
        function updateEffects(){
            const rect=div.getBoundingClientRect();
            const viewportHeight=window.innerHeight;
            if (rect.top<=0&&rect.bottom>=viewportHeight){
                const scrollRange=div.offsetHeight-viewportHeight;
                const scrolled=Math.abs(rect.top);
                const progress=Math.min(1,scrolled/scrollRange);
                // 颜色插值计算
                const r=startColor.r+(endColor.r-startColor.r)*progress;
                const g=startColor.g+(endColor.g-startColor.g)*progress;
                const b=startColor.b+(endColor.b-startColor.b)*progress;
                div.style.backgroundColor=`rgb(${r},${g},${b})`;
                h1.style.opacity=progress;
                h1.style.fontSize=`${1+progress*3}rem`;
            }else{
                const isBelow=rect.top>0;
                div.style.backgroundColor=isBelow?'#e6ffff':'#06f';
                h1.style.opacity=isBelow?0:1;
                h1.style.fontSize=isBelow?'1rem':'4rem';
            }
        }
        // 优化滚动监听
        let isAnimating=false;
        window.addEventListener('scroll',()=>{
            if (!isAnimating){
                requestAnimationFrame(()=>{
                    updateEffects();
                    isAnimating=false;
                });
                isAnimating=true;
            }
        });
        updateEffects();
    </script>
</body>
</html>